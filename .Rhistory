x2<-"a"
class(x2)
vec<-c(1,5:9)
vec
class(vec)
vec<-c(as.integer(1),as.integer(5))
vec<-c(as.integer(1),5
vec<-c(as.integer(1),5)
class(vec)
vec<-c(TRUE,1,5)
vec<-c(TRUE,FALSE)
class(VEC)
class(Vvec)
class(vec)
vec<-c(2i)
vec<-c(2i,5,1i)
vec<-c(2i)
class(vec)
paste(1)
?paste
paste0(1:12)
paste(1:12)
(nth <- paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
(nth <- paste(1:12, c("st", "nd", "rd", rep("th", 9))))
paste(1:5,"a")
paste0(1:5,"a")
paste0(1:5,"a","b")
paste0(1:5,c("a","b"))
seq
?seq()
seq(0, 1, length.out = 11)
seq(stats::rnorm(20))
seq(0,20,along.with = 5)
seq(0,along.with = 5)
seq(0,100,along.with = 5)
seq(from=0,to=100,along.with = 5)
seq(along.with = 5)
seq(along.with = 20)
vec<-seq(0, 1, length.out = 11)
class(seq(stats::rnorm(20)))
seq(stats::rnorm(20))
seq.int(1,8,1)
vec<-seq.int(1,8,1)
vec<-seq.int(as.integer(1),8,1)
vec<-seq.int(as.integer(1),8,1)
source('E:/Google Drive NTUT/Objetct Oriented Programming/Information Downloaded/HM1/105AG8410_HM1/105AG8410_HM1.R')
s<-c("programming languages")
nchar(s[1])
nchar(s[1])
nchar(s)
nchar(s[2])
nchar(s[1])
nchar(s)
s<-c("programming languages", "casa")
nchar(s)
pi
state.name
nchar(state.name)
length(s)
length(state.name)
cat("abc","def")
x<-cat("abc","def")
x
x<-cat("abc","def",123)
x=cat("abc","def",123)
paste("a","bcd",123)
x<-paste("a","bcd",123)
x
class(print(x))
x<-2
class(print(x))
class(cat(x))
x<-paste("a",123)
x
class(print(x))
class(cat(x))
s<-"first\rsecond\n"
print(s)
cat(s)
s<-"firstoneever\rsecond\n"
print(s)
cat(s)
cat('I am adding values to S string',s)
s<-"firstoneever\rsecond\n"
print(s)
cat(s)
cat('\nI am adding values to S string',s)
cat('\nI am adding values to S string',s,file = 'test')
cat(s,'\n I am adding values to S string',file = 'test')
cat(s,'I am adding values to S string',file = 'test')
pi
print(pi)
print(pi, digits = 10)
format(pi,digits = 10)
class(format(pi,digits = 10))
class(print(pi, digits = 10))
as.numeric(format(pi,digits = 10))
c<-print(pi, digits = 10)
c+1
print(c+1,digits = 10)
sink("chen.text")
s<-"firstoneever\rsecond\n"
print(s)
cat(s)
getwd()
sink
sink()
paste('one',1,'two,'2)
paste('one',1,'two,'2')
paste('one',1,'two',2)
paste('one',1,'two',2,sep='*')
paste(c('one',1,'two',2),sep='*')
paste(c('one','two','three'),sep='*')
paste(c('one','two','three'),collapse ='*')
?outer
outer(c("r1","r2","r3"),c("c1","c2"))
outer(c("r1","r2","r3"),c("c1","c2"),paste)
outer(c("r1","r2","r3"),c("c1","c2"),paste,sep='-')
outer(1:9,1:9,'*')
1:9 %o% 1:9
s<-c("programming languages", "casa")
nchar(s)
length(s)
pi
state.name
length(state.name)
nchar(state.name)
cat("abc","def",123)
x<-paste("a",123)
x
class(print(x))
x<-print(cat("abc","def",123))
cat("abc","def",123)
x<-cat("abc","def",123)
cat("abc","def",123)
cat("a",123)
x<-paste("a",123)
x
x<-print("a",123)
x<-print(x)
x
class(paste("a",123))
class(paste("a",123))
class(cat("a",123))
s<-"firstoneever\rsecond\n"
print(s)
cat(s)
cat(s,'I am adding values to S string',file = 'test')
pi #7 digits
print(pi, digits = 10)
as.numeric(format(pi,digits = 10))
format(pi,digits = 10)
s<-"firstoneever\rsecond\n"
sink("chen.text")
print(s)
print(s)
cat(s)
getwd()
sink()
getwd()
sink("chen.text")
getwd()
paste('one',1,'two',2)
paste('one',1,'two',2,sep='*')
sink()
paste('one',1,'two',2)
x<-"firstoneever\rsecond\n"
rm(s)
print(x)
x[1]
x[3]
substring(x,2,6)
substring(x,2)
substring(x,4)
substr(x,2,6)
substr(x,2)
print(x)
s<-"this is a book."
strsplit(s,' ')
strsplit(s,'s')
strsplit(s,'is')
strsplit(s,' is ')
s<-"one two  three   "
strsplit(s," ")
x<-strsplit(s," ")
x
nchar(x)
length(x)
s<-"one two  three   "
x<-strsplit(s," ")
x[[1]]
x<-strsplit(s," ")[[1]]
length(x)
nchar(x)
x[nchar(x)=0]
x[nchar(x)==0]
x[nchar(x)==0]<-x[-nchar(x)==0]
x[nchar(x)==0]<-x[-nchar(x)==0]
x
y<-x[nchar(x)!=0]
print(y)
length(y)
x<-strsplit(s,"")[[1]]
x<-strsplit(s," ")
x<-strsplit(s," ")[[1]]
s<-"one two  three four  five   "
x<-strsplit(s," ")[[1]]
y<-x[nchar(x)!=0]
print(y)
s<-"one two  three four  five   "
x<-strsplit(s," ")
y<-x[x!=" "]
print(y)
s<-"one two  three four  five   "
x<-strsplit(s,"")
y<-x[nchar(x)!=0]
print(y)
x<-strsplit(s,"")
y<-x[nchar(x)!=" "]
print(y)
x<-strsplit(s,"")[[1]]
y<-x[nchar(x)!=" "]
print(y)
s<-"one two  three four  five   "
x<-strsplit(s," ")[[1]]
y<-x[nchar(x)!=" "]
print(y)
s<-"one two  three four  five   "
x<-strsplit(s," ")[[1]]
y<-x[nchar(x)!=0]
print(y)
nchar(y)
paste(y)
y<-print(y)
y<-outer(y,paste)
y<-outer(y,paste)
y<-paste(y)
y
s<-c("c apple","apple jack", "apple sauce")
s
grep("apple",s)
grep("apple",s, ignore.case = TRUE)
grep("apple",s) #case sensitive to a specific string
s<-c("c apple","Apple jack", "apple sauce")
s
grep("apple",s) #case sensitive to a specific string
grep("apple",s, ignore.case = TRUE)
grep("apple",s, ignore.case = TRUE,value = TRUE)
s<-"one two  three   "
x<-strsplit(s," ")[[1]]
x<-strsplit(s," ")
x<-strsplit(s," ")[[1]]
y<-x[nchar(x)!=0]
print(y)
s<-"one two  three   "
s<-"one two  three   "
x<-strsplit(s," ")[[1]]
y<-x[nchar(x)!='']
print(y)
s<-"one two  three   "
x<-strsplit(s,"")[[1]]
y<-x[nchar(x)!=0]
print(y)
s<-"one two  three   "
x<-strsplit(s,"")[[1]]
s<-"one two  three   "
x<-strsplit(s,"")[[1]]
y<-x[nchar(x)!=" "]
s<-c("programming languages", "casa")
nchar(s)
s<-"one two  three   "
x<-strsplit(s," ")[[1]]
s<-"one two  three   "
x<-strsplit(s,"")[[1]]
y<-x[x!=" "]
print(y)
length(y)
x<-strsplit(s,"")
y<-unlist(x)
cat("a",123)
sink("chen.text")
cat("a",123)
cat("a",123)
x<-paste("a",123)
sink()
s<-"this is a list."
sub("is","XY",s)
gsub("is","XY",s)
s<-'it's me!
s<-"it's me!"
s<-"it\'s me!"
s<-"it's me!"
s<-"it\'s me!"
s<-'it's me!'
s<-"it's me!"
s<-'it\'s me!'
s<-'it\"s me!'
s<-'it\n s me!'
cat(s)
s<-'it\b s me!'
cat(s)
s<-c("a","ab","abc","accb","acccb","acbb")
grep("ab",s,value = TRUE)
grep("ac*b",s,value = TRUE)
grep("ac+b",s,value = TRUE)
s<-c("a","ab","abc")
grep("ab",s,value = TRUE)
grep("ac*b",s,value = TRUE)
grep("ac+b",s,value = TRUE)
grep("a",s,value = TRUE)
grep("a*c",s,value = TRUE)
grep("*a",s,value = TRUE)
grep("a*b",s,value = TRUE)
grep("a",s,value = FALSE)
grep("ac?b",s,value = TRUE)
grep("ac?b",s,value = TRUE)
[:digit:]
\d:
[:digit:]:digits,012345
[^0-9]
[:lowe:]
[:lower:]
s<-c("^ab","ab","abc","abd","abe","ab",12)
grep("ab.",s,value = TRUE)
s
grep("ab[c-e]",s,value = TRUE)
s<-c("^ab","ab","abc","abd","abe","ab 12")
s
grep("ab.",s,value = TRUE)
grep("ab[c-e]",s,value = TRUE)
grep("\\^ab",s,value = TRUE)
Sys.time()
Sys.time()
as.data("2016-11-11")
as.date("2016-11-11")
as.Date("2016-11-11")
x<-as.Date("2016-11-11")
class(x)
m1<-matrix(4,4)
m1<-matrix(c(1,-1,1,-1),2,2)
m1
m1<-matrix(c(1,-1,-1,1),2,2)
m1
rownames(m1)<-c('d1','d2')
m1
m1<-matrix(c(1,-1,-1,1),2,2)
rownames(m1)<-c('r1','r2')
colnames(m1)<-c('c1','c2')
m1
m1[c1]
colnames(m1)<-c('c2','c3')
mL_grades <-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
View(mL_grades)
View(mL_grades)
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
View(a)
View(a)
a[[]]
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
View(a)
View(a)
a[,2]
vect=a[,2]
length(vect)
vect=sort(vect)
vect
plot(vect)
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
vect=a[,2]
length(vect)
vect=sort(vect)
vect
plot(vect)
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
vect=a[,2]
length(vect)
vect=sort(vect)
vect
plot(vect)
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
vect=a[,2]
length(vect)
vect=sort(vect)
vect
plot(vect)
a<-read.csv(file.choose(), stringsAsFactors = FALSE,strip.white = TRUE, na.strings = c("NA","") )
vect=a[,2]
length(vect)
vect=sort(vect)
vect
plot(vect)
PathFolder<-choose.dir(getwd(), "Select your working folder")
pathFolder
pathFolder<-choose.dir(getwd(), "Select your working folder")
pathFolder
x_test<-read.table(c(pathFolder,"\","x_test.txt")
pathFolder
x_test<-read.table(c(pathFolder,"\\","x_test.txt")
setwd(choose.dir(getwd(), "Select your working folder"))
setwd("E:/Google Drive NTUT/Objetct Oriented Programming/Information Downloaded/HM3/dataset-HW3/HM3-OOP")
x_test<-read.table("x_test.txt")
x_train<-read.table("x_train.txt")
y_test<-read.table("y_test.txt")
y_train<-read.table("y_train.text")
y_train<-read.table("y_train.txt")
subjectID_test<-read.table("subjectID_test.txt")
subjectID_train<-read.table("subjectID_train.txt")
View(subjectID_test)
View(subjectID_test)
View(subjectID_train)
View(subjectID_train)
View(x_test)
a<-1:10
b<2:20
b<-2:20
b<-11:20
a_df<-data.frame(a)
a<-1:10
b<-11:20
a_df<-data.frame(a)
b_df<-data.frame(b)
x_df<-as.data.frame(a_df,b_df)
x_df<-data.frame(a_df,b_df)
View(x_df)
View(x_df)
setwd(choose.dir(getwd(), "Select your working folder"))
x_test<-read.table("x_test.txt")
x_train<-read.table("x_train.txt")
x_test<-read.table("x_test.txt")
x_train<-read.table("x_train.txt")
x_train<-read.table("x_train.txt")
y_test<-read.table("y_test.txt")
y_train<-read.table("y_train.txt")
subjectID_test<-read.table("subjectID_test.txt")
subjectID_train<-read.table("subjectID_train.txt")
a<-1:10
b<-11:25
a_df<-data.frame(a)
b_df<-data.frame(b)
x_df<-data.frame(a_df,b_df)
x_test<-read.table("x_test.txt")
x_train<-read.table("x_train.txt")
y_test<-read.table("y_test.txt")
y_train<-read.table("y_train.txt")
subjectID_test<-read.table("subjectID_test.txt")
subjectID_train<-read.table("subjectID_train.txt")
Data_x_train<-data.frame(x_train,y_train,subjectID_train)
Data_x_train
clc
View(Data_x_train)
View(Data_x_train)
View(Data_x_train)
View(Data_x_train)
View(subjectID_train)
View(subjectID_train)
View(y_train)
View(y_train)
y_train<-name("activity")
y_train<-names("activity")
View(y_test)
y_train<-read.table("y_train.txt")
names(y_train)<-"activity"
View(x_train)
View(x_train)
View(x_train)
View(y_train)
View(y_train)
names(y_test)<-"activity"
x_test<-read.table("x_test.txt")
x_train<-read.table("x_train.txt")
y_test<-read.table("y_test.txt")
y_train<-read.table("y_train.txt")
subjectID_test<-read.table("subjectID_test.txt")
subjectID_train<-read.table("subjectID_train.txt")
names(y_train)<-"activity"
names(y_test)<-"activity"
Data_x_train<-data.frame(x_train,y_train,subjectID_train)
Data_x_test<-data.frame(x_test,y_test,subjectID_test)
data<-data.frame(Data_x_test,Data_x_train)
data<-c(Data_x_test,Data_x_train)
train<-data.frame(x_train,y_train,subjectID_train)
x_test<-read.table("x_test.txt")
x_train<-read.table("x_train.txt")
y_test<-read.table("y_test.txt")
y_train<-read.table("y_train.txt")
subjectID_test<-read.table("subjectID_test.txt")
subjectID_train<-read.table("subjectID_train.txt")
names(y_train)<-"activity"
names(y_test)<-"activity"
train<-data.frame(x_train,y_train,subjectID_train)
test<-data.frame(x_test,y_test,subjectID_test)
View(x_test)
View(y_test)
View(subjectID_test)
names(subjectID_test)<-"SubJect ID"
names(subjectID_train)<-"SubJect ID"
train<-data.frame(x_train,y_train,subjectID_train)
test<-data.frame(x_test,y_test,subjectID_test)
length(train)
lengthTest<-length(test)
test(,lengthTest)
test[,lengthTest]
test[[,lengthTest]]
test$SubJect.ID
names(subjectID_test)<-"SubJectID"
names(subjectID_train)<-"SubJectID"
train<-data.frame(x_train,y_train,subjectID_train)
test<-data.frame(x_test,y_test,subjectID_test)
test$SubJect.ID
test$SubJectID
